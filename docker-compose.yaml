version: '3.1'
services:
  portainer:
    container_name: portainer
    image: portainer/portainer
    restart: unless-stopped
    volumes:
      - /srv/docker/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9000:9000"

  syncthing:
    container_name: hass-sync
    restart: unless-stopped
    image: linuxserver/syncthing
    volumes:
      - /srv/docker/syncthing:/config
      - /srv/docker/portainer:/sync/portainer
      - /srv/docker/hass:/sync/hass
      - /srv/docker/ha-dockermon:/sync/ha-dockermon
      - /srv/docker/nodered:/sync/nodered
      - /srv/docker/mosquitto:/sync/mosquitto
      - /srv/docker/nginx:/sync/nginx
      - /srv/docker/certbot:/sync/certbot
      - /etc/localtime:/etc/localtime:ro
    network_mode: host
    environment:
      - PGID=0
      - PUID=0

  mqtt:
    container_name: MQTT
    restart: unless-stopped
    image: eclipse-mosquitto
    privileged: true
    volumes:
      - /srv/docker/mosquitto/config:/mosquitto/config
      - /srv/docker/mosquitto/log:/mosquitto/log
      - /srv/docker/mosquitto/data:/mosquitto/data
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "1883:1883"
      - "9001:9001"

  hadockermon:
    container_name: ha-dockermon
    restart: unless-stopped
    image: philhawthorne/ha-dockermon
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /srv/docker/ha-dockermon:/config
    ports:
      - "8126:8126"

  nginx:
    container_name: nginx
    image: nginx:1.15-alpine
    restart: unless-stopped
    volumes:
      - /srv/docker/nginx/conf:/etc/nginx/conf.d
      - /srv/docker/nginx/log:/nginxlog
      - /srv/docker/nginx/htpasswd:/htpasswd
      - /srv/docker/certbot/conf:/etc/letsencrypt
      - /srv/docker/certbot/www:/var/www/certbot
    ports:
      - "80:80"
#      - "443:443"
      - "8133:8133"
#      - "8124:8124"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    container_name: certbot
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - /srv/docker/certbot/conf:/etc/letsencrypt
      - /srv/docker/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  homeassistant:
    container_name: home-assistant
    restart: unless-stopped
#    image: albertols/hass-custom-ozw
    build:
      context: .
      dockerfile: hass-custom-ozw-dockerfile
    devices:
      - /dev/ttyACM0:/dev/ttyACM0
    volumes:
      - /srv/docker/hass/config:/config
      - /srv/docker/hass/media:/media
      - /srv/docker/hass/data:/data
      - /srv/docker/hass/logs:/halogs
      - /etc/localtime:/etc/localtime:ro
    network_mode: host
    privileged: true
#   ports:
#      - "8123:8123"

  nodered:
    container_name: nodered
    restart: unless-stopped
    image: nodered/node-red-docker:v8
    depends_on:
      - "homeassistant"
    user: root
    volumes:
      - /srv/docker/node-red-1/user:/data
      - /etc/localtime:/etc/localtime:ro
      - /root/.ssh:/root/.ssh:ro
    ports:
      - "1880:1880"
