# 
# ██╗  ██╗ █████╗ ███████╗███████╗    ███████╗████████╗ █████╗  ██████╗██╗  ██╗
# ██║  ██║██╔══██╗██╔════╝██╔════╝    ██╔════╝╚══██╔══╝██╔══██╗██╔════╝██║ ██╔╝
# ███████║███████║███████╗███████╗    ███████╗   ██║   ███████║██║     █████╔╝ 
# ██╔══██║██╔══██║╚════██║╚════██║    ╚════██║   ██║   ██╔══██║██║     ██╔═██╗ 
# ██║  ██║██║  ██║███████║███████║    ███████║   ██║   ██║  ██║╚██████╗██║  ██╗
# ╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝╚══════╝    ╚══════╝   ╚═╝   ╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝
#                                                                              
# 

version: '3.1'
services:

#   homeassistant120:
#     container_name: home-assistant-zxt120
#     hostname: home-assistant
#     restart: unless-stopped
#     # image: homeassistant/home-assistant
#     # image: albertols/ha-custom-ozw:0.99.3
#     image: albertols/ha-custom-ozw-zxt120:0.99.3

#     build:
#       context: ./customized/homeassistant
#       args:
#         - HA_TAG=0.99.3
# #     dockerfile: hass-custom-ozw-dockerfile
#       # dockerfile: dockerfile-curr-vers
#       dockerfile: dockerfile-zxt120
#     devices:
#       - /dev/ttyACM0:/dev/ttyACM0
#       - /dev/ttyACM0:/dev/ttyAMA0
#       - /dev/ttyACM0:/dev/ttyUSB0
#       - /dev/ttyACM0:/dev/ttyUSB1
#     volumes:
#       - /srv/docker/hass/config:/config
#       - /srv/docker/hass/media:/media
#       - /srv/docker/hass/data:/data
#       - /srv/docker/hass/logs:/halogs
#       - /etc/localtime:/etc/localtime:ro
#       - /var/run/docker.sock:/var/run/docker.sock
#     network_mode: host
#     privileged: true
# #   ports:
# #      - "8123:8123"


  homeassistant:
    container_name: home-assistant
    hostname: home-assistant
    restart: unless-stopped
    # image: homeassistant/home-assistant
    # image: albertols/ha-custom-ozw:0.99.3
    # image: albertols/ha-custom-ozw:0.100.1
    # image: albertols/ha-custom-ozw-zxt120:0.100.3
    # image: albertols/ha-custom-ozw-zxt120:0.101.3
    image: albertols/ha-custom-ozw-zxt120:0.109.6
    # image: albertols/ha-custom-ozw-zxt120:0.110.1

    build:
      context: ./customized/homeassistant
      args:
        # - HA_TAG=0.99.3
        # - HA_TAG=0.100.3
        - HA_TAG=0.109.6
        # - HA_TAG=0.110.1
#     dockerfile: hass-custom-ozw-dockerfile
      # dockerfile: dockerfile-curr-vers
      dockerfile: dockerfile-zxt120
    devices:
      # - /dev/ttyACM0:/dev/ttyACM0
      # - /dev/ttyACM0:/dev/ttyAMA0
      # - /dev/ttyACM0:/dev/ttyUSB0
      - /dev/ttyUSB0:/dev/ttyUSB0
      - /dev/ttyUSB1:/dev/ttyUSB1
    volumes:
      - /srv/docker/hass/config:/config
      - /srv/docker/hass/media:/media
      - /srv/docker/hass/data:/data
      - /srv/docker/hass/logs:/halogs
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
    network_mode: host
    privileged: true
#   ports:
#      - "8123:8123"

  glances:
    container_name: glances
#   image: nicolargo/glances
#   image: nicolargo/glances:latest-alpine
    build:
      context: ./customized/glances
#     dockerfile: glances-custom-dockerfile
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
       - "GLANCES_OPT=-w"
    pid: host
    network_mode: host
    privileged: true

  portainer:
    container_name: portainer
    image: portainer/portainer
    restart: unless-stopped
    volumes:
      - /srv/docker/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9000:9000"

  syncthing:
    container_name: hass-sync
    restart: unless-stopped
    image: linuxserver/syncthing
    volumes:
      - /srv/docker/syncthing:/config
      - /srv/docker/portainer:/sync/portainer
      - /srv/docker/hass:/sync/hass
      - /srv/docker/ha-dockermon:/sync/ha-dockermon
      - /srv/docker/nodered:/sync/nodered
      - /srv/docker/mosquitto:/sync/mosquitto
      - /srv/docker/nginx:/sync/nginx
      - /srv/docker/certbot:/sync/certbot
      - /home/alberto:/sync/home
      - /etc/localtime:/etc/localtime:ro
    network_mode: host
    environment:
      - PGID=0
      - PUID=0

  mqtt:
    container_name: MQTT
    restart: unless-stopped
    image: eclipse-mosquitto
    privileged: true
    volumes:
      - /srv/docker/mosquitto/config:/mosquitto/config
      - /srv/docker/mosquitto/log:/mosquitto/log
      - /srv/docker/mosquitto/data:/mosquitto/data
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "1883:1883"
      - "9001:9001"

  # hadockermon:
  #   container_name: ha-dockermon
  #   restart: unless-stopped
  #   image: philhawthorne/ha-dockermon
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - /srv/docker/ha-dockermon:/config
  #   ports:
  #     - "8126:8126"

  nginx:
    container_name: nginx
    image: nginx:1.15-alpine
    restart: unless-stopped
    volumes:
      - /srv/docker/nginx/conf:/etc/nginx/conf.d
      - /srv/docker/nginx/log:/nginxlog
      - /srv/docker/nginx/htpasswd:/htpasswd
      - /srv/docker/certbot/conf:/etc/letsencrypt
      - /srv/docker/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "8123:8123"
      - "8124:8124"
      - "8125:8125"
#      - "8126:8126"
      - "8127:8127"
      - "8128:8128"
      - "8129:8129"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    container_name: certbot
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - /srv/docker/certbot/conf:/etc/letsencrypt
      - /srv/docker/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  nodered:
    container_name: nodered
    restart: unless-stopped
    image: nodered/node-red-docker:v8
    depends_on:
      - "homeassistant"
    user: root
    environment:
      - TZ=America/Argentina/Buenos_Aires
    volumes:
      - /srv/docker/nodered/user:/data
      - /etc/localtime:/etc/localtime:ro
      - /root/.ssh:/root/.ssh:ro
    ports:
      - "1880:1880"

  cloud9: # https://hub.docker.com/r/sapk/cloud9/
    container_name: cloud9
    image: sapk/cloud9
    restart: unless-stopped
    volumes:
      - /srv/docker:/workspace
      - /home/alberto:/workspace/home
    command: --auth alberto:appl3pi3
    ports:
      - "8181:8181"


  sqlite:
    container_name: sqlite
    build:
      context: ./customized/sqlite-web
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /srv/docker/hass/data:/data
    environment:
       - "SQLITE_DATABASE=home-assistant_v2.db"
    ports:
      - "8080:8080"


